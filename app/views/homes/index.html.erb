
<div id="wrapper">
    <input id="origin" class="controls" type="text"
        placeholder="Enter the origin">
    <input id="destination" class="controls" type="text" 
    placeholder="Enter the destination">
    <button name="calculate" id="calculate" class="controls">Calculate!</button>
</div>
<div id="map"></div>
<script type="text/javascript">

    var map, autocomplete_origin, autocomplete_destination;
    var placeSearch;
    var geocoder;
    var origin_marker, destination_marker, bounds;

    $('#calculate').click(function(){
        var origin = $('#origin').val();
        var destination = $('#destination').val();
        if(origin.length === 0) console.log('no origin');
        if(destination.length === 0) console.log('no destination');

        var data = {};
        geocoder.geocode( { 'address': origin}, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                data.origin = results[0].geometry.location.lat()+','+results[0].geometry.location.lng();
                geocoder.geocode( { 'address': destination}, function(results, status) {
                    data.destination = results[0].geometry.location.lat()+','+results[0].geometry.location.lng();
                    console.log(data);
                    $.ajax({
                        type: "POST",
                        url: '/directions',
                        data: data,
                        success: drawTrajectory,
                    });
                });
                
            } else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
    });
    
    function drawTrajectory(){
        console.log('');
    }

    function initMap() {

        var directionsService = new google.maps.DirectionsService;
        geocoder = new google.maps.Geocoder();

        var wrapper = (document.getElementById('wrapper'));
        
        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 41.159882, lng: -8.628955},
            zoom: 14
        });

        google.maps.event.addDomListener(window, 'resize', function(){
            console.log('fez resize!!!');
            // map.setCenter(map_center);
            if(bounds) 
                map.fitBounds(bounds);
        });

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(wrapper);

        var autocomplete_origin = new google.maps.places.Autocomplete(
            (document.getElementById('origin')),{types: ['geocode']});
        autocomplete_origin.bindTo('bounds', map);

        autocomplete_destination = new google.maps.places.Autocomplete(
            (document.getElementById('destination')),{types: ['geocode']});
        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        
        autocomplete_origin.addListener('place_changed', function(){
            if(origin_marker)
                origin_marker.setMap(null);

            var infowindowOrigin = new google.maps.InfoWindow();
            var place = autocomplete_origin.getPlace();
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(15);
            }

            origin_marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });
            bounds = new google.maps.LatLngBounds();
            bounds.extend(origin_marker.position);
            if(destination_marker){
                bounds.extend(destination_marker.position);
                map.fitBounds(bounds);
            }
            
            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }
            infowindowOrigin.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindowOrigin.open(map, origin_marker);
        });

        autocomplete_destination.addListener('place_changed', function(){
            if(destination_marker)
                destination_marker.setMap(null);

            var infowindowDestination = new google.maps.InfoWindow();
            var place = autocomplete_destination.getPlace();
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(15); 
            }

            destination_marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });
            bounds = new google.maps.LatLngBounds();
            bounds.extend(destination_marker.position);
            if(origin_marker){
                bounds.extend(origin_marker.position);
                map.fitBounds(bounds);
            }
            
            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }
            infowindowDestination.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindowDestination.open(map, destination_marker);
        });
    }


</script>
<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDrYo3wJqcRthZNCdYR4bBYdaI6u4DL_Kc&signed_in=true&libraries=places&callback=initMap">
</script>
