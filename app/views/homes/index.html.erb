<div id="spinner">
    <i class="fa fa-spinner fa-spin" aria-hidden="true"></i>
</div>
<div id="wrapper">
    <input id="origin" class="controls" type="text"
        placeholder="Enter the origin">
    <input id="destination" class="controls" type="text"
    placeholder="Enter the destination">
    <button name="calculate" id="calculate" class="controls">Calculate!</button>
</div>
<div id="map"></div>
<script type="text/javascript">
    var SPINNER = '<i class="fa fa-spinner fa-spin" aria-hidden="true"></i>';
    var map, autocomplete_origin, autocomplete_destination;
    var placeSearch;
    var geocoder;
    var origin_marker, destination_marker, bounds;

    $('#calculate').click(function(){
        $('#spinner').show();
        var origin = $('#origin').val();
        var destination = $('#destination').val();
        if(origin.length === 0) console.log('no origin');
        if(destination.length === 0) console.log('no destination');
        // drawTrajectory();
        var data = {};
        geocoder.geocode( { 'address': origin}, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                data.origin = results[0].geometry.location.lat()+','+results[0].geometry.location.lng();
                geocoder.geocode( { 'address': destination}, function(results, status) {
                    data.destination = results[0].geometry.location.lat()+','+results[0].geometry.location.lng();
                    console.log(data);


                    $.ajax({
                        type: "GET",
                        url: '/directions',
                        data: data,
                        success: drawTrajectory,
                    });
                });

            } else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
    });


    function drawTrajectory(routes){
        $('#spinner').hide();

        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var directionsDisplay1 = new google.maps.DirectionsRenderer;
        directionsDisplay.setMap(map);
        directionsDisplay1.setMap(map);

        var route1 = routes[0];
        var wpts = [];
        for(i=1; i < route1.steps.length-1; i++){
            if(wpts.length < 8)
                wpts.push({location: route1.steps[i].start_location, stopover: false});
        }

        directionsService.route({
            origin: origin_marker.getPosition(),
            destination: destination_marker.getPosition(),
            waypoints: wpts,
            optimizeWaypoints: true,
            travelMode: google.maps.TravelMode.WALKING
          }, function(response, status) {
            if (status === google.maps.DirectionsStatus.OK) {

                directionsDisplay.setDirections(response);
                var routeMarker1 = new google.maps.Marker({
                    map: map,
                    position: wpts[parseInt(wpts.length/2)].location,
                    icon: '<%= image_url "info_tag_green"%>'
                });

                routeMarker1.addListener('click', function() {
                    $('#route_info').remove();
                    console.log(route1.steps);
                    var div = '<div id="route_info" class="controls">';
                    var steps = route1.steps;
                    var streets = [];
                    for (var i = 0; i < steps.length; i++) {
                        div += '<div style="margin-bottom: 5px;">'
                        if (streets.indexOf(steps[i].start_location.name) <0){

                            streets.push(steps[i].start_location.name);
                            var street_name;
                            if(steps[i].start_location.name.length > 25){
                                street_name = steps[i].start_location.name.substring(0, 22) + '...';
                            }
                            else{
                                street_name = steps[i].start_location.name;
                            }
                            div += '<span class="'+steps[i].start_location.status+'">'+street_name + '</span> ';
                            div += '<%= image_tag "emoji_poop", class: "emoji_poop" %> <%= image_tag "emoji_neutral", class: "emoji_neutral"%> <%= image_tag "emoji_positive", class: "emoji_positive" %>'
                            div += '</div>';
                        }

                    }
                    //environment
                    div += "<hr>"
                    var stats = route1.stats;
                    for(var i=0;i<stats.length;i++){
                        div += '<div class="environment"><span>'+stats[i].name+'</span><span class="value">'+stats[i].value+'</span></div>'
                    }

                    div += '</div>';

                    $('#info').hide();
                    $('#wrapper').parent().append(div);
                    handleClickOnEmoji();

                });
            } else {
              window.alert('Directions request failed due to ' + status);
            }
        });


        if(routes[1]){
            var route2 = routes[1];
            console.log('h√° alternativa!');
            console.log(route2.steps.length);
            var wpts1 = [];
            for(i=1; i < route2.steps.length-1; i++){
                if(wpts1.length < 8)
                    wpts1.push({location: route2.steps[i].start_location, stopover: false});
            }

            directionsService.route({
                origin: origin_marker.getPosition(),
                destination: destination_marker.getPosition(),
                waypoints: wpts1,
                travelMode: google.maps.TravelMode.WALKING
              }, function(response, status) {
                if (status === google.maps.DirectionsStatus.OK) {

                    directionsDisplay1.setDirections(response);
                    var routeMarker2 = new google.maps.Marker({
                        map: map,
                        position: wpts1[parseInt(wpts1.length/2)].location,
                        icon: '<%= image_url "info_tag_blue"%>'
                    });

                    routeMarker2.addListener('click', function() {
                        $('#route_info').remove();
                        console.log(route2.steps);
                        var div = '<div id="route_info" class="controls">';
                        var steps = route2.steps;
                        var streets = [];
                        for (var i = 0; i < steps.length; i++) {
                            div += '<div style="margin-bottom: 5px;">'
                            if (streets.indexOf(steps[i].start_location.name) <0){

                                streets.push(steps[i].start_location.name);
                                var street_name;
                                if(steps[i].start_location.name.length > 25){
                                    street_name = steps[i].start_location.name.substring(0, 22) + '...';
                                }
                                else
                                    street_name = steps[i].start_location.name;
                                div += '<span class="'+steps[i].start_location.status+'">'+street_name + '</span> ';
                                div += '<%= image_tag "emoji_poop", class: "emoji_poop" %> <%= image_tag "emoji_neutral", class: "emoji_neutral"%> <%= image_tag "emoji_positive", class: "emoji_positive" %>'
                                div += '</div>';
                            }

                        }

                        //environment
                        div += "<hr>"
                        var stats = route2.stats;
                        for(var i=0;i<stats.length;i++){
                            div += '<div class="environment"><span>'+stats[i].name+'</span><span class="value">'+stats[i].value+'</span></div>'
                        }

                        div += '</div>';

                        $('#info').hide();
                        $('#wrapper').parent().append(div);
                        handleClickOnEmoji();

                    });

                } else {
                  window.alert('Directions request failed due to ' + status);
                }
            });
        }
    }

    function initMap() {
        geocoder = new google.maps.Geocoder();

        var wrapper = (document.getElementById('wrapper'));

        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 41.159882, lng: -8.628955},
            zoom: 14
        });

        google.maps.event.addDomListener(window, 'resize', function(){
            console.log('fez resize!!!');
            // map.setCenter(map_center);
            if(bounds)
                map.fitBounds(bounds);
        });

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(wrapper);

        var autocomplete_origin = new google.maps.places.Autocomplete(
            (document.getElementById('origin')),{types: ['geocode']});
        autocomplete_origin.bindTo('bounds', map);

        autocomplete_destination = new google.maps.places.Autocomplete(
            (document.getElementById('destination')),{types: ['geocode']});
        // When the user selects an address from the dropdown, populate the address
        // fields in the form.

        autocomplete_origin.addListener('place_changed', function(){
            if(origin_marker)
                origin_marker.setMap(null);

            var infowindowOrigin = new google.maps.InfoWindow();
            var place = autocomplete_origin.getPlace();
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(15);
            }

            origin_marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });
            bounds = new google.maps.LatLngBounds();
            bounds.extend(origin_marker.position);
            if(destination_marker){
                bounds.extend(destination_marker.position);
                map.fitBounds(bounds);
            }

            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }
            infowindowOrigin.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindowOrigin.open(map, origin_marker);
        });

        autocomplete_destination.addListener('place_changed', function(){
            if(destination_marker)
                destination_marker.setMap(null);

            var infowindowDestination = new google.maps.InfoWindow();
            var place = autocomplete_destination.getPlace();
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(15);
            }

            destination_marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });
            bounds = new google.maps.LatLngBounds();
            bounds.extend(destination_marker.position);
            if(origin_marker){
                bounds.extend(origin_marker.position);
                map.fitBounds(bounds);
            }

            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }
            infowindowDestination.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindowDestination.open(map, destination_marker);
        });
    }

    function handleClickOnEmoji(){
        $('#route_info img').on('click',function(){
            $(this).siblings('img').addClass('disabled');
            $(this).removeClass('disabled');
        })
    }

</script>
<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDrYo3wJqcRthZNCdYR4bBYdaI6u4DL_Kc&signed_in=true&libraries=places&callback=initMap">
</script>
